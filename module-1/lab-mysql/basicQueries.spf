<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>publications</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>2272569617696890241</string>
			<key>name</key>
			<string>127.0.0.1</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGNjdYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK0HCBUWFxgZHSQoLDA0VSRudWxs0wkK
			CwwQFFdOUy5rZXlzWk5TLm9iamVjdHNWJGNsYXNzow0OD4ACgAOA
			BKMREhOABYAGgAiADFR0eXBlVHJvd3NUa2V5c18QJlNlbGVjdGlv
			bkRldGFpbFR5cGVQcmltYXJ5S2V5ZWREZXRhaWxz0wkKCxobHKCg
			gAfSHh8gIVokY2xhc3NuYW1lWCRjbGFzc2VzXxATTlNNdXRhYmxl
			RGljdGlvbmFyeaMgIiNcTlNEaWN0aW9uYXJ5WE5TT2JqZWN00goL
			JSehJoAJgAvSCykqK1lOUy5zdHJpbmeACldzdG9yX2lk0h4fLS5f
			EA9OU011dGFibGVTdHJpbmejLS8jWE5TU3RyaW5n0h4fMTJeTlNN
			dXRhYmxlQXJyYXmjMTMjV05TQXJyYXnSHh8iNaIiI18QD05TS2V5
			ZWRBcmNoaXZlctE4OVRkYXRhgAEACAARABoAIwAtADIANwBFAEsA
			UgBaAGUAbABwAHIAdAB2AHoAfAB+AIAAggCHAIwAkQC6AMEAwgDD
			AMUAygDVAN4A9AD4AQUBDgETARUBFwEZAR4BKAEqATIBNwFJAU0B
			VgFbAWoBbgF2AXsBfgGQAZMBmAAAAAAAAAIBAAAAAAAAADoAAAAA
			AAAAAAAAAAAAAAGa
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {626.5, 498}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>select * from authors
where authors.state = "CA";


#select * from authors as A
#where A.state = "CA"

#Like clause along with where
select * from authors
where authors.city like 'B%';

#Sorting Results 
select * from authors
where authors.state = "CA"
Order by `au_fname`


select au_fname, au_lname,phone,address from `authors`
where `authors`.`city` = "San Francisco";


SELECT publishers.pub_name AS Publisher_Name, COUNT(titles.title_id) AS Titles
FROM publishers 
INNER JOIN titles
ON publishers.pub_id = titles.pub_id
GROUP BY pub_name;


SELECT pub_name AS Publisher_Name, COUNT(titles.title_id) AS Titles
FROM publishers 
LEFT JOIN titles 
ON publishers.pub_id = titles.pub_id
GROUP BY pub_name;

# It is imporatant to note that in the Group By statement, we are using all the columns that we want to print and that are not aggregated
SELECT titles.title, titles.type, titles.price, SUM(sales.qty) AS units_sold
FROM publications.sales sales
RIGHT JOIN titles
ON sales.title_id = titles.title_id
GROUP BY titles.title, titles.type, titles.price;


## UNION for OUTER JOINS 
SELECT * FROM employee
RIGHT JOIN jobs
ON jobs.job_id = jobs.job_id;

SELECT *
FROM employee AS emp
LEFT JOIN publications.jobs job
ON emp.job_id = job.job_id;

## Combined Query / UNION
SELECT *
FROM publications.employee emp
RIGHT JOIN publications.jobs job
ON emp.job_id = job.job_id
UNION
SELECT *
FROM publications.employee emp
LEFT JOIN publications.jobs job
ON emp.job_id = job.job_id;


## Updtate Tables vs Insert 
insert `Dummy` set Name = 'Himanshu Aggarwal', `Address` = 'aafjaadfbablaj'

UPDATE `Dummy` SET Name = "Hi", `Address` = "NEW PLACE"
where id = 2;

# Delete vs Drop
delete from Dummy where id = 2;
# drop Dummy;


# Sub Queries 
SELECT Store, Items/Orders AS AvgItems, Qty/Items AS AvgQty
FROM (
    SELECT stor_name AS Store, COUNT(DISTINCT(ord_num)) AS Orders, COUNT(title_id) AS Items, SUM(qty) AS Qty
    FROM sales
    INNER JOIN stores 
    ON stores.stor_id = sales.stor_id
    GROUP BY Store
)summary;


SELECT Store, Items/Orders AS AvgItems, Qty/Items AS AvgQty
FROM (
    SELECT stores.stor_name AS Store, COUNT(DISTINCT(ord_num)) AS Orders, COUNT(title_id) AS Items, SUM(qty) AS Qty
    FROM publications.sales sales
    INNER JOIN publications.stores stores ON stores.stor_id = sales.stor_id
    GROUP BY Store
) summary;








select version();
select database();
select user();
show status;
show variables;</string>
			<key>table</key>
			<string>stores</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>174.5</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>SELECT Store, Items/Orders AS AvgItems, Qty/Items AS AvgQty
FROM (
    SELECT stor_name AS Store, COUNT(DISTINCT(ord_num)) AS Orders, COUNT(title_id) AS Items, SUM(qty) AS Qty
    FROM sales
    INNER JOIN stores 
    ON stores.stor_id = sales.stor_id
    GROUP BY Store
)summary</string>
		<string>delete from authors where authors.`au_lname` = 'Gringlesby'</string>
		<string>SELECT *
FROM publications.employee emp
RIGHT JOIN publications.jobs job
ON emp.job_id = job.job_id
UNION
SELECT *
FROM publications.employee emp
LEFT JOIN publications.jobs job
ON emp.job_id = job.job_id</string>
		<string>SELECT * FROM employee
RIGHT JOIN jobs
ON jobs.job_id = employee.job_id</string>
		<string>SELECT *
FROM employee AS emp
LEFT JOIN job
ON jobs.job_id = employee.job_id</string>
		<string>SELECT titles.title, titles.type, titles.price, SUM(sales.qty) AS units_sold
FROM sales
RIGHT JOIN titles
ON sales.title_id = titles.title_id
GROUP BY titles.title, titles.type, titles.price</string>
		<string>in the Group By statement, we are using all the columns that we want to print an</string>
		<string>in the Group By statement, we are using all the columns that we want to print and that are not aggregated
SELECT titles.title, titles.type, titles.price, SUM(sales.qty) AS units_sold
FROM sales
RIGHT JOIN titles
ON sales.title_id = titles.title_id
GROUP BY titles.title, titles.type, titles.price</string>
		<string>SELECT titles.title, titles.type, titles.price, SUM(sales.qty) AS units_sold
FROM sales
RIGHT JOIN titles
ON sales.title_id = titles.title_id
GROUP BY titles.title, titles.type</string>
		<string>SELECT titles.title, titles.type, titles.price, SUM(sales.qty) AS units_sold
FROM publications.sales sales
RIGHT JOIN titles
ON sales.title_id = titles.title_id
GROUP BY titles.title, titles.type, titles.price</string>
		<string>SELECT pub_name AS Publisher_Name, COUNT(titles.title_id) AS Titles
FROM publishers 
LEFT JOIN titles 
ON publishers.pub_id = titles.pub_id
GROUP BY pub_name</string>
		<string>SELECT pub_name AS Publisher_Name, COUNT(titles.title_id) AS Titles
FROM publishers 
RIGHT JOIN titles 
ON publishers.pub_id = titles.pub_id
GROUP BY pub_name</string>
		<string>SELECT publishers.pub_name AS Publisher_Name, COUNT(titles.title_id) AS Titles
FROM publishers 
INNER JOIN titles
ON publishers.pub_id = titles.pub_id
GROUP BY pub_name</string>
		<string>select au_fname AS FirstName, au_lname,phone,address from authors as A
where A.city = "San Francisco"</string>
		<string>select au_fname AS FirstName, au_lname,phone,address from authors
where authors.city = "San Francisco"</string>
		<string>select au_fname, au_lname,phone,address from authors
where authors.city = "San Francisco"</string>
		<string>select * from authors
where authors.state = "CA"
Order by `au_fname` desc</string>
		<string>select * from authors
where authors.state = "CA"
Order by `au_fname`</string>
		<string>#Like clause along with where
select * from authors
where authors.city like '%y'</string>
		<string>select * from authors
where authors.city like 'b%'</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.16</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
